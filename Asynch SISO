//////////////////////////////////////////////////////////////////////////          ASYNCHORONOUS SISO          //////////////////////////////////////////////////////////////////////



***********************************************************************         RTL CODE       ************************************************************************


module siso(input i,input clk,clr,preset,output y );
	 reg w1,w2,w3,w4;
	always@(posedge clk or posedge clr or posedge preset)
		begin
			if(clr) 
			begin
				w1 <= 0;
            w2 <= 0;
            w3 <= 0;
				w4 <= 0; 
			end
			else if(preset) 
			begin
			   w1 <= 1;
            w2 <= 1;
            w3 <= 1;
				w4 <= 1; 
			end
			else  
			begin
				w1<=i;
				w2<=w1;
				w3<=w2;
				w4<=w3; 
			end
		end
	assign y=w4;
endmodule



*************************************************************     TB CODE    *****************************************************************************************



module siso_tb();
    reg i;
    reg clk, clr, preset;
    wire y;

    siso DUT (
        .i(i),
        .clk(clk),
        .clr(clr),
        .preset(preset),
        .y(y)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    task t1(input m);
        begin
            @(negedge clk)
                i = m;
        end
    endtask
	 task initialize;
			begin
				i=0;
				clr=0;
				preset=0;
			end
		endtask
		task rst();
			begin
				clr=1'b1;
				#2
				clr=1'b0;
			end
		endtask
		task set();
			begin
				preset=1'b1;
				#2
				preset=1'b0;
			end
		endtask

    initial begin
		initialize;
		rst;
		set;

      t1(1);
		t1(0);
		t1(1);
		t1(0);
		t1(0);
		t1(0);
		t1(1);
		t1(1);
		
        
        #1000 $finish; 
    end

    initial begin
        $monitor("Time=%0t | input i=%b | clk=%b | clr=%b | preset=%b | output y=%b",
                 $time, i, clk, clr, preset, y);
    end

endmodule

