//////////////////////////////////////////////////////           FULL ADDER USING HALF ADDER         ////////////////////////////////////////////////////////////



*****************************************************        RTL CODE            ******************************************************************



module fulladder_using_halfadder(input a,b,c,output sum,carry);
	wire w1,w2,w3;
	half_adder a1(a,b,w1,w2);
	half_adder a2(w1,c,sum,w3);
	or a3(carry,w2,w3);
endmodule



***************************************************************   HALF ADDER CODE       **********************************************************




module half_adder(input a,b,output sum,carry);
	assign sum=a^b;
	assign carry=a&b;
endmodule





***************************************************************   TESTBENCH CODE    *****************************************************


module full_adder_tb();
	reg a,b,c;
	wire sum,carry;
	integer i;
fulladder_using_halfadder DUT(a,b,c,sum,carry);
	initial 
		begin 
			for(i=0;i<8;i=i+1)
				begin
					{a,b,c}=i;
					#10;
				end
		end
	initial 
		$monitor("input a=%b,b=%b,c=%b, output sum=%b,carry=%b",a,b,c,sum,carry);
	initial #90 $finish;
endmodule
