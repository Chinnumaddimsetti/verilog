///////////////////////////////////////////            MUX4_1 (BEHAVIOURAL MODEL) USING TASK                       ///////////////////////////////



**********************************************                RTL CODE                         *****************************************************



module mux4_1(i,s,y);
	input [3:0]i;
	input [1:0]s;
	output reg y;
	always @ (*)
		begin
			case(s)
			2'b00:y=i[0];
			2'b01:y=i[1];
			2'b10:y=i[2];
			2'b11:y=i[3];
			default :y=0;
			endcase
		end
endmodule



***********************************************           TB CODE                    ***********************************************************





module mux4_1_tb();
	reg [3:0]i;
	reg [1:0]s;
	wire y;
	integer j,k;
mux4_1 DUT(i,s,y);
	task t1;
		begin
		{i,s}=0;
		#10;
		end
	endtask
	task t2;
		begin 
			for(j=0;j<16;j=j+1)
				begin
					{i}=j;
					#10;
				end
		end
	endtask
		task t3;
		begin 
			for(k=0;k<4;k=k+1)
				begin
					{s}=k;
					#10;
				end
		end
	endtask
	initial
	begin
	t1;
	end
	initial
	begin
	t2;
	end
	initial
	begin
	t3;
	end
/*task t2(input [3:0]j,input [1:0]k);
	begin
	#10;
	i=j;
	s=k;
	end
	endtask
	initial
	begin
	t1;
	t2(4'd3,2'd3); 
	end
	*/
initial
$monitor("input i=%b,s=%b,output y=%b",i,s,y);
initial
begin
#3000 $finish;
end
endmodule
	
