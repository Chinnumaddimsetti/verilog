////////////////////                RIPPER CARRY ADDER             ///////////////////


*******************************              RTL CODE             ***************************** 

module ripple(input [3:0]a,b,input c,output [3:0]sum, output carry);
	wire w1,w2,w3;
	full_adder A1(a[0],b[0],c,sum[0],w1);
	full_adder A2(a[1],b[1],w1,sum[1],w2);
	full_adder A3(a[2],b[2],w2,sum[2],w3);
	full_adder A4(a[3],b[3],w3,sum[3],carry);
endmodule



********************************     FULL ADDER MODULE CODE          **************************


module full_adder(input a,b,c,output sum,carry);
	assign sum=a^b^c;
	assign carry=a&b |b&c |c&a;
endmodule




*******************************    TEST BENCH CODE   *******************************



module ripple_tb();
	reg [3:0]a,b;
	reg c;
	wire sum,carry;
	integer i,j;
ripple DUT(a,b,c,sum,carry);
	initial 
	   begin
		a=0;
		b=0;
		c=0;
		
		end
	initial 
		begin
		for(i=0;i<16;i=i+1)
			begin 
				{a}=i;
				#10;
			end
		end
	initial 
		begin
		for(j=0;j<16;j=j+1)
			begin 
				{b}=j;
				#10;
			end
		end
	initial 
	$monitor("input a=%b,b=%b,c=%b output sum=%b,carry=%b",a,b,c,sum,carry);
	initial 
	begin
	#100 $finish;
	end
endmodule





